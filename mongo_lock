#!/usr/bin/env python

## GENERATED FILE - DO NOT EDIT

import urllib2
import sys
import os

try:
    import json
except ImportError:
    import simplejson as json


def getServerStatus():
    host = os.environ.get("host", "127.0.0.1")
    port = 28017
    url = "http://%s:%d/_status" % (host, port)
    req = urllib2.Request(url)
    user = os.environ.get("user")
    password = os.environ.get("password")
    if user and password:
        passwdmngr = urllib2.HTTPPasswordMgrWithDefaultRealm()
        passwdmngr.add_password(None, 'http://%s:%d' % (host, port), user, password)
        authhandler = urllib2.HTTPDigestAuthHandler(passwdmngr)
        opener = urllib2.build_opener(authhandler)
        urllib2.install_opener(opener)
    raw = urllib2.urlopen(req).read()
    return json.loads( raw )["serverStatus"]

names = [ "locked_read", "locked_write", "acquiring_read", "acquiring_write" ]

def doData():
    data = getServerStatus()['locks']
    totals = { 'locked': { 'read': 0, 'write': 0 }, 'acquiring': { 'read': 0, 'write': 0 } }

    for key in data:
      totals['locked']['read'] += data[key]['timeLockedMicros'].get('r', 0)
      totals['locked']['write'] += data[key]['timeLockedMicros'].get('w', 0)
      totals['acquiring']['read'] += data[key]['timeAcquiringMicros'].get('r', 0)
      totals['acquiring']['write'] += data[key]['timeAcquiringMicros'].get('w', 0)

    print names[0] + ".value " + str( totals['locked']['read'] )
    print names[1] + ".value " + str( totals['locked']['write'] )
    print names[2] + ".value " + str( totals['acquiring']['read'] )
    print names[3] + ".value " + str( totals['acquiring']['write'] )

def doConfig():
    print "graph_title MongoDB write lock percentage"
    print "graph_args --base 1000 -l 0 "
    print "graph_vlabel percentage"
    print "graph_category MongoDB"

    for name in names:
      print name + ".label " + name
      print name + ".type DERIVE"
      print name + ".cdef " + name + ",10000.0,/"


if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "config":
        doConfig()
    else:
        doData()


